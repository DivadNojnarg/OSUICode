{
  "version": 3,
  "sources": ["../../../srcjs/helpers_config.js", "../../../srcjs/helpers_theme.js", "../../../srcjs/helpers_pwa.js", "../../../srcjs/helpers_disconnect.js", "../../../srcjs/init.js", "../../../srcjs/widgets.js"],
  "sourcesContent": ["export const setConfig = () => {\n  // collect all data elements stored in body\n let config = $(document).find(\"script[data-for='app']\");\n config = JSON.parse(config.html());\n\n // always erase existing root value just in case the user changes the root.\n // This may be harmful\n config.root = \"#app\";\n\n  // store app methods\n  config.methods =  {\n    toggleDarkTheme: function() {\n      let self = this;\n      let $html = self.$(\"html\");\n      $html.toggleClass(\"theme-dark\");\n    }\n  };\n\n  // check if the app is intended to be a PWA\n  let isPWA = $('body').attr('data-pwa') === \"true\";\n\n  if (isPWA) {\n    config.serviceWorker = {\n      path: window.location.pathname + \"service-worker.js\",\n      scope: window.location.pathname\n    };\n  }\n\n  // Widgets cache\n  config.data = function() {\n    return {\n      // any other widget type to cache ...\n      gauge: [],\n      tooltips: [],\n    };\n  };\n\n  return config;\n};\n", "// Style for touch plugin\nconst setTouchStyle = (config) => {\n  if (config.hasOwnProperty(\"touch\")) {\n    if (config.touch.tapHold) {\n      $(\"<style>\")\n        .prop(\"type\", \"text/css\")\n        .html(\n          `\n          -moz-user-select: none;\n          -webkit-user-select: none;\n          user-select: none;`\n        )\n        .appendTo(\"head\");\n    }\n  }\n};\n\n// Set color theme\nconst setColorTheme = (config, app) => {\n  if (config.hasOwnProperty('color')) {\n    let colorCSS = app.utils.colorThemeCSSProperties(config.color);\n    $('<style>')\n      .prop('type', 'text/css')\n      .html(`:root {\n        --f7-theme-color: ${colorCSS[\"--f7-theme-color\"]};\n        --f7-theme-color-rgb: ${colorCSS[\"--f7-theme-color-rgb\"]};\n        --f7-theme-color-shade: ${colorCSS[\"--f7-theme-color-shade\"]};\n        --f7-theme-color-tint: ${colorCSS[\"--f7-theme-color-tint\"]};\n      }`)\n      .appendTo(\"head\");\n  }\n};\n\n// Filled theme\nconst setFilledTheme = (config) => {\n  if (!config.hasOwnProperty('filled')) config.filled = false;\n  if (config.filled) {\n    let filledCSS = `\n      :root,\n      :root.theme-dark,\n      :root .theme-dark {\n        --f7-bars-bg-color: var(--f7-theme-color);\n        --f7-bars-bg-color-rgb: var(--f7-theme-color-rgb);\n        --f7-bars-translucent-opacity: 0.9;\n        --f7-bars-text-color: #fff;\n        --f7-bars-link-color: #fff;\n        --f7-navbar-subtitle-text-color: rgba(255,255,255,0.85);\n        --f7-bars-border-color: transparent;\n        --f7-tabbar-link-active-color: #fff;\n        --f7-tabbar-link-inactive-color: rgba(255,255,255,0.54);\n        --f7-sheet-border-color: transparent;\n        --f7-tabbar-link-active-border-color: #fff;\n      }\n      .appbar,\n      .navbar,\n      .toolbar,\n      .subnavbar,\n      .calendar-header,\n      .calendar-footer {\n        --f7-touch-ripple-color: var(--f7-touch-ripple-white);\n        --f7-link-highlight-color: var(--f7-link-highlight-white);\n        --f7-button-text-color: #fff;\n        --f7-button-pressed-bg-color: rgba(255,255,255,0.1);\n      }\n      .navbar-large-transparent,\n      .navbar-large.navbar-transparent {\n        --f7-navbar-large-title-text-color: #000;\n\n        --r: 0;\n        --g: 122;\n        --b: 255;\n        --progress: var(--f7-navbar-large-collapse-progress);\n        --f7-bars-link-color: rgb(\n          calc(var(--r) + (255 - var(--r)) * var(--progress)),\n          calc(var(--g) + (255 - var(--g)) * var(--progress)),\n          calc(var(--b) + (255 - var(--b)) * var(--progress))\n        );\n      }\n      .theme-dark .navbar-large-transparent,\n      .theme-dark .navbar-large.navbar-transparent {\n        --f7-navbar-large-title-text-color: #fff;\n    }`;\n\n    $('<style>')\n      .prop('type', 'text/css')\n      .html(`${filledCSS}`)\n      .appendTo(\"head\");\n  }\n};\n\n\n// Set dark mode\nconst setDarkMode = (config, app) => {\n  if (!config.hasOwnProperty('dark')) config.dark = false;\n  if (config.dark) {\n    app.methods.toggleDarkTheme();\n  }\n};\n\nexport const initTheme = (config, app) => {\n  setTouchStyle(config);\n  setColorTheme(config, app);\n  setFilledTheme(config);\n  setDarkMode(config, app);\n};\n", "export const setPWA = (app) => {\n  // Create custom install UI\n  let installToast = app.toast.create({\n    position: 'center',\n    text: '<button id=\"install-button\" class=\"toast-button button color-green\">Install</button>',\n  });\n\n  let deferredPrompt;\n  // Handle install event\n  $(window).on('beforeinstallprompt', (e) => {\n    // Prevent Chrome 67 and earlier from automatically showing the prompt\n    e.preventDefault();\n    // Stash the event so it can be triggered later.\n    deferredPrompt = e.originalEvent;\n    // Show install trigger\n    installToast.open();\n  });\n\n  // Installation must be done by a user gesture!\n  // close toast whenever a choice is made ... Give time\n  // to the toast to be created before event registration.\n  app.utils.nextTick(function() {\n    $('#install-button').on('click', function() {\n      // close install toast\n      installToast.close();\n      if (!deferredPrompt) {\n        // The deferred prompt isn't available.\n        return;\n      }\n      // Show the install prompt.\n      deferredPrompt.prompt();\n      // Log the result\n      deferredPrompt.userChoice.then((result) => {\n        console.log('\uD83D\uDC4D', 'userChoice', result);\n        // Reset the deferred prompt variable, since\n        // prompt() can only be called once.\n        deferredPrompt = null;\n      });\n    });\n  }, 500);\n};\n", "export const setCustomDisconnect = (app) => {\n  // Custom disconnect screen\n  $(document).on(\"shiny:connected\", function(event) {\n    Shiny.shinyapp.onDisconnected = function() {\n      // Add gray-out overlay, if not already present\n      let $overlay = $('#shiny-disconnected-overlay');\n      if ($overlay.length === 0) {\n        $(document.body).append('<div id=\"shiny-disconnected-overlay\"></div>');\n      }\n    };\n  });\n\n  $(document).on(\"shiny:disconnected\", function(event) {\n    let reconnectToast = app.toast\n      .create({\n        position: \"center\",\n        text:\n          'Oups... disconnected </br> </br> <div class=\"row\"><button onclick=\"Shiny.shinyapp.reconnect();\" class=\"toast-button button color-green col\">Reconnect</button><button onclick=\"location.reload();\" class=\"toast-button button color-red col\">Reload</button></div>'\n      })\n      .open();\n\n    $('.toast').css(\"background-color\", \"#1c1c1d\");\n\n    // close toast whenever a choice is made ...\n    $(\".toast-button\").on(\"click\", function() {\n      reconnectToast.close();\n    });\n  });\n};\n", "// Import helper functions\nimport { setConfig } from './helpers_config.js';\nimport { initTheme } from './helpers_theme.js';\nimport { setPWA } from './helpers_pwa.js';\nimport { setCustomDisconnect } from './helpers_disconnect.js';\n\n$( document ).ready(function() {\n  let config = setConfig();\n  // create app instance\n  app = new Framework7(config);\n  // init main view\n  mainView = app.views.create('.view-main');\n  // Set theme: dark mode, touch, filled, color, taphold css\n  initTheme(config, app);\n  // Set custom disconnect screen\n  setCustomDisconnect(app);\n  // PWA setup\n  setPWA(app);\n\n  app.notification.create({\n    text: 'Hello, how are you?',\n    on: {\n      opened: function () {\n        console.log('Notification opened');\n      }\n    }\n  }).open();\n\n  // equivalent to setTimeout ...\n  app.utils.nextTick(function() {\n    app.notification.create({\n      text: 'You look great!'\n    }).open();\n  }, 2000);\n\n  // taphold test\n  $('#mybutton').on('taphold', function () {\n    app.dialog.alert('Tap hold fired!');\n  });\n});\n", "$( document ).ready(function() {\n  const uiWidgets = [\"gauge\", \"swiper\", \"searchbar\"];\n  const serverWidgets = [\"toast\", \"photoBrowser\", \"notification\"];\n  const widgets = uiWidgets.concat(serverWidgets);\n\n  // Instantiate a widget\n  const activateWidget = (widget) => {\n    // Handle ui side widgets\n    if (uiWidgets.indexOf(widget) > -1) {\n      $(\".\" + widget).each(function() {\n        let $el = $(this);\n        let config = $(document).find(\n          \"script[data-for='\" + $el.attr(\"id\") + \"']\"\n        );\n        config = JSON.parse(config.html());\n        // add the id\n        config.el = '#' + $el.attr(\"id\");\n\n        // feed the create method\n        let w = app[widget].create(config);\n        // Store the widget instance in the app data cache\n        app.data[widget][$el.attr(\"id\")] = w;\n      });\n    } else {\n      // This concerns toasts, notifications, photoBrowser, ...\n      // that don't have any UI element in the DOM before creating\n      // the widget instance.\n      Shiny.addCustomMessageHandler(widget, function(message) {\n\n        // Let shiny lnow about the widget state\n        if (message.id !== undefined) {\n          message.on = {\n            opened: function() {\n              Shiny.setInputValue(message.id, true);\n            },\n            closed: function() {\n              Shiny.setInputValue(message.id, false);\n            }\n          };\n        }\n\n        let w = app[widget].create(message);\n        w.open();\n      });\n    }\n  };\n\n  // Loop over all widgets to activate them\n  widgets.forEach(function(w) {\n    activateWidget(w);\n  });\n\n\n  // Update widget instances\n  Shiny.addCustomMessageHandler('update-instance', function(message) {\n    // Recover in which array is stored the given instance.\n    // Uniqueness is ensured since HTML id are supposed to be unique.\n    let instanceFamily;\n    for (const property in app.data) {\n      for (const e in app.data[property]) {\n        if (e === message.id) {\n          instanceFamily = property;\n        }\n      }\n    }\n\n    let oldInstance = app.data[instanceFamily][message.id];\n    let oldConfig = oldInstance.params;\n    let newConfig = app.utils.extend(oldConfig,  message.options);\n\n    // Destroy old instance\n    oldInstance.destroy();\n    // Create new config\n    let newInstance = app[instanceFamily].create(newConfig);\n    // Update app data\n    app.data[instanceFamily][message.id] = newInstance;\n  });\n\n  Shiny.addCustomMessageHandler('add_tooltip', function(message) {\n    // We store all created instances in app data so that we don't\n    // recreate them later if they exist ...\n    if (app.data.tooltips[message.targetEl] === undefined) {\n      // create instance\n      let t = app.tooltip.create(message);\n      // Open tooltip\n      t.show();\n      // Storage in app data (tooltips array)\n      app.data.tooltips[message.targetEl] = t;\n    }\n  });\n\n  Shiny.addCustomMessageHandler(\n    'update_tooltip', function(message) {\n    if (app.data.tooltips[message.targetEl] !== undefined) {\n      // Try to get the instance\n      let t = app.tooltip.get(message.targetEl);\n      if (message.action === \"update\") {\n        if (t) {\n          t.setText(message.text);\n        }\n      } else if (message.action === \"toggle\") {\n        if (t) {\n          // create copy that won't be modified if t is destroyed!\n          let cachedTooltip = Object.assign({}, t);\n          // save copy to replace the deleted one in the app data\n          app.data.tooltips[message.targetEl] = cachedTooltip;\n          // destroy current instance\n          t.destroy();\n        } else {\n          // Parameters\n          let pars = app.data.tooltips[message.targetEl].params;\n          // recreate the tooltip based on the copy configuration\n          t = app.tooltip.create(pars);\n          app.data.tooltips[message.targetEl] = t;\n        }\n      }\n    }\n  });\n\n});\n"],
  "mappings": "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",
  "names": []
}
