% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/inputs.R
\name{updateCustomTextInput}
\alias{updateCustomTextInput}
\title{Update \link{customTextInput} on the client side}
\usage{
updateCustomTextInput(
  inputId,
  value = NULL,
  placeholder = NULL,
  session = getDefaultReactiveDomain()
)
}
\arguments{
\item{inputId}{The id of the input object.}

\item{value}{The value to set for the input object.}

\item{placeholder}{The placeholder to set for the input object.}

\item{session}{The session object passed to function given to shiny server.}
}
\description{
Update \link{customTextInput} on the client side
}
\examples{
if (interactive()) {
 # This example corresponds to section 5.4.2.4 (Set and update)
 ui <- fluidPage(
  customTextInput(
   "caption",
   "Caption",
   "Data Summary",
   binding_step = 3
   ),
  actionButton("update", "Update text!", class = "btn-success"),
  textOutput("custom_text")
 )

 server <- function(input, output, session) {
   output$custom_text <- renderText(input$caption)
   observeEvent(input$update, {
     updateCustomTextInput("caption", value = "new text")
   })
 }
 shinyApp(ui, server)
}
}
